--- host.c.orig	2018-05-19 19:30:14.000000000 +0300
+++ host.c	2018-05-19 19:36:02.000000000 +0300
@@ -85,8 +85,8 @@
     }
 
     /* 11. Enqueue the kernel object for execution */
-    //cl_event kernel_event; /* task1 */
-    rv = clEnqueueTask(cmd_q, kernel, 0, NULL, NULL);
+    cl_event kernel_event; /* task1 */
+    rv = clEnqueueTask(cmd_q, kernel, 0, NULL, &kernel_event);
     /*
     // the same as above using clEnqueueNDRangeKernel() call
     size_t global_work_size = 1;
@@ -104,7 +104,15 @@
         print_cl_error("Failed to set a synchronization point:", rv, stderr);
 
     // get kernel time using the OpenCL event profiling API
-    /* task1 */
+    cl_ulong time_start, time_end;
+    rv  = clGetEventProfilingInfo(kernel_event, CL_PROFILING_COMMAND_SUBMIT,
+            sizeof(cl_ulong), &time_start, NULL);
+    rv |= clGetEventProfilingInfo(kernel_event, CL_PROFILING_COMMAND_END,
+            sizeof(cl_ulong), &time_end, NULL);
+    if(CL_SUCCESS != rv)
+        print_cl_error("Failed to get profiling info:", rv, stderr);
+    else
+        printf("Kernel time: %llu\n", (time_end - time_start) / 1000);
     
     /* 12. Read out the buffer back from the device to the host */
     rv = clEnqueueReadBuffer(cmd_q, buf_out, CL_TRUE, 0, data_size, &data_out,
